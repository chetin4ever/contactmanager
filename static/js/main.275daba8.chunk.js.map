{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/pages/About.js","component/pages/NotFound.js","component/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","console","log","target","onDeleteClick","a","delete","name","email","phone","className","style","cursor","onClick","cusrsor","color","float","to","marginRight","Contacts","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","propsTypes","PropTypes","string","isRequired","palceholder","func","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","bind","match","params","EditContact","updContact","put","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.275daba8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n//import Contact from \"./component/contacts/Contact\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  async componentDidMount() {\n    //uncomment if we not using async await\n    // axios.get(\"http://jsonplaceholder.typicode.com/users\").then((res) => {\n    //   this.setState({ contacts: res.data });\n    //   //console.log(this.state.contacts);\n    // });\n    //////////////await\n    const res = await axios.get(\"http://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"; //impt\nimport { Consumer } from \"../../context\";\n// import './contact.css';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n  onShowClick = (e) => {\n    console.log(e.target);\n    this.setState({\n      showContactInfo: !this.state.showContactInfo,\n    });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    //console.log(\"click on delete button\");\n    //delete using json palce holder\n    //uncomment if use do not use async\n    // axios\n    //   .delete(`http://jsonplaceholder.typicode.com/users/${id}`)\n    //   .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n    // dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    //console.log(showContactInfo);\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick}\n                ></i>\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cusrsor: \"pointer\", color: \"red\", float: \"right\" }}\n                  onClick={() => this.onDeleteClick(id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <span className=\"text-danger\">Email : </span>\n                    {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    {\" \"}\n                    <span className=\"text-danger\">Phone : </span>\n                    {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  // deleteClickHandler:PropTypes.func.isRequired,\n  //phone: PropTypes.bool.isRequired,\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>List\n              </h1>\n              {contacts.map((contact) => {\n                //return (<Contact contact={contact} key={contact.id} />)\n                return <Contact contact={contact} key={contact.id} />;\n              })}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <div>\n      {/* inline style */}\n      {/* <h1 style={{color:'red',fontSize:'50px'}}>{branding}</h1> */}\n      {/* <h1 style={headerStyle}>{branding}</h1> */}\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            {branding}\n          </Link>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\"></i> Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                  <i className=\"fas fa-plus\"></i> Add\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-question\"></i> About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n//default props\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n///\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n  // branding: PropTypes.object.isRequired\n};\n// const headerStyle = {\n//     color: 'red',\n//     fontSize:'50px'\n// }\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        value={value}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propsTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  palceholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport { v1 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: \"\",\n  };\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n    //error check\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const newContact = {\n      // id: uuid(),// uncomment if you dont use post request\n\n      name,\n      email,\n      phone,\n    };\n    // adding contact using post request in json placeholder\n    // axios\n    //   .post(\"http://jsonplaceholder.typicode.com/users\", newContact)\n    //   .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    //using async\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n    //uncomment if not using post request\n    //dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn  btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React from \"react\";\n\nexport default (props) => {\n  console.log(props);\n\n  return (\n    <div>\n      <h2 className=\"display-4\">About Contact {props.match.params.id}</h2>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> page not found\n      </h1>\n      <p className=\"lead\">Sorry,that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n//import { v1 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: \"\",\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n    //error check\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    // const updContact = {\n    //   // id: uuid(),// uncomment if you dont use post request\n\n    //   name,\n    //   email,\n    //   phone,\n    // };\n    // const { id } = this.props.match.params;\n    // adding contact using post request in json placeholder\n    // axios\n    //   .post(\"http://jsonplaceholder.typicode.com/users\", newContact)\n    //   .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    //using async\n    // const res = await axios.put(\n    //   `http://jsonplaceholder.typicode.com/users/${id}}`,\n    //   updContact\n    // );\n    const updContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    console.log(res);\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    //uncomment if not using post request\n    //dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn  btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Contacts from \"./component/contacts/Contacts\";\nimport Header from \"./component/layout/Header\";\nimport AddContact from \"./component/contacts/AddContact\";\nimport { Provider } from \"./context\";\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./component/pages/About\";\nimport NotFound from \"./component/pages/NotFound\";\nimport EditContact from \"./component/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Conatct Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}